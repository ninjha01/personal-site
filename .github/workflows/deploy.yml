name: CICD for Personal Site
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NEXT_TELEMETRY_DISABLED: 1
  
jobs:
  frontend_compile:
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install deps
        run: npm install
      - name: Run Prettier
        run: npm run format:check
      - name: Run ESLint
        run: npm run lint
      - name: Build project
        run: npm run build
  
  deploy_staging:
    name: Deploy Staging
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install NPM packages
        run: npm ci
      - name: Build project
        run: npm run build
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GA_STAGING_SA_KEY }}"
      - id: "deploy"
        uses: "google-github-actions/deploy-appengine@v0"

  e2e_tests:
    name: End to End Tests
    runs-on: ubuntu-latest
    needs: [ deploy_staging ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          headless: true
          spec: "cypress/e2e/spec.cy.ts"
          config: baseUrl=https://staging.nishantjha.org
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save cypress videos folder
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: cypress-videos
          if-no-files-found: error
          path: cypress/videos/
    
  deploy_prod:
    name: Deploy Prod
    runs-on: ubuntu-latest
    needs: [ e2e_tests ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install NPM packages
        run: npm ci
      - name: Build project
        run: npm run build
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GA_PROD_SA_KEY }}"
      - id: "deploy"
        uses: "google-github-actions/deploy-appengine@v0"
